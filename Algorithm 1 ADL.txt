Algorithm: CalculateInfluenceScores(Graph)
Input: Graph (Adjacency List)
Output: MostInfluential (List of nodes with highest influence score)

Begin
    NodeCount ← Number of nodes in Graph
    InfluenceScores ← Empty Dictionary

    For each StartNode in Graph do
        TotalDistance ← RunBFS(Graph, StartNode)
        Score ← (NodeCount - 1) / TotalDistance
        InfluenceScores[StartNode] ← Score
    End For

    MaxScore ← -∞
    MostInfluential ← Empty List

    For each Entry in InfluenceScores do
        If Entry.Score > MaxScore then
            MaxScore ← Entry.Score
            MostInfluential ← [Entry.Key]
        Else If Entry.Score = MaxScore then
            Append Entry.Key to MostInfluential
        End If
    End For

    Return MostInfluential
End

Subroutine: RunBFS(Graph, StartNode)
Begin
    Distances ← Dictionary with default ∞
    For each Node in Graph.Keys do
        Distances[Node] ← ∞
    End For
    Distances[StartNode] ← 0

    Queue ← New Queue
    Enqueue StartNode

    While Queue is not empty do
        Current ← Dequeue
        For each Neighbour in Graph[Current] do
            If Distances[Neighbour] = ∞ then
                Distances[Neighbour] ← Distances[Current] + 1
                Enqueue Neighbour
            End If
        End For
    End While

    Sum ← 0
    For each Distance in Distances.Values do
        If Distance ≠ ∞ then
            Sum ← Sum + Distance
        End If
    End For

    Return Sum
End
